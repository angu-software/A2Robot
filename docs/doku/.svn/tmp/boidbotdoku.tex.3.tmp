%---Preamble---
\documentclass[12pt,a4paper,titlepage]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage[ngerman]{babel}
\usepackage{longtable}
\usepackage{booktabs}
\usepackage{graphicx}
\usepackage{float}
\usepackage{xcolor}
\definecolor{black}{gray}{0} % 10% gray 
\usepackage[colorlinks=true,linkcolor=black,citecolor=black]{hyperref}
\usepackage[normalem]{ulem}
\usepackage{listings}
\usepackage{hyperref}

\parindent 0pt
\parskip 8pt

%---Funktionen--
\include{functions}

<<<<<<< .mine
\usepackage{xspace}
\newcommand{\boidbot}[0]{BoidBot $A_{2}R$}

=======
\usepackage{xspace}
\newcommand{\boidbot}[0]{BoidBot $A_{2}R$\xspace}

>>>>>>> .r17
\begin{document}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Titelseite
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{titlepage}
\begin{center}

{\Large Autonome Systeme\\[0.1cm]
Hochschule für Technik und Wirtschaft\\[0.1cm]
SS2011}\\[1.5cm]
\rule{\linewidth}{0.3mm}\\[1.5cm]
{\Huge BoidBot $A_{2}R$}\\[1cm]
{\Large --- Dokumentation ---}\\[1.5cm]
\rule{\linewidth}{0.3mm}\\[1.5cm]
{\large \today}\\[1cm]
\textbf{Andreas Bilke B.Sc.}\\(andreas.bilke@student.htw-berlin.de)\\[0.3cm]
\textbf{Andreas Günther B.Sc.}\\(andreas.guenther@student.htw-berlin.de)\\[3cm]
\end{center}
\end{titlepage}
\newpage

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inhaltsverzeichnis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\pagenumbering{roman}
\tableofcontents
\newpage
\pagenumbering{arabic}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inhalt
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Aufgabenstellung}
\section{Hardware}

In diesem Abschnitt wird der technische Aufbau des \boidbot (siehe \figref{fig:boidbot}) beschrieben. Grundgerüst des \boidbot bildet eine 100cm$^2$ große Acrylglasplatte, an der alle weiteren Komponenten angebracht sind
Als Controller dient ein \emph{Arduino Uno}\footnote{www.arduino.cc}, dass mit einem selbstentworfenem Controller-Shield zur Steuerung des Antriebs und der Sensorik ausgestattet wurde. Das gesamte System wird durch eine Batterie mit einer Spannung von 9,6V versorgt.

\fig{img/boidbota2r.jpg}{fig:boidbot}{\boidbot}{}

\subsection{Antrieb}

Auf der Unterseite der Grundplatte sind zwei Servomotoren angebracht, die den \boidbot antreiben sowie ein Stützrad. Die hier verbauten Servomotoren haben in ihrer ursprünglichen Bauform nur einen Einstellbereich von $270^\circ$ und somit als Antriebsmotoren nicht nutzbar. Daher wurden diese Motoren entsprechend Modifiziert\footnote{http://www.fpoppa.de/brecker/robotik/tutorials/servo-mod}, damit sie als Antriebsmotoren einsetzbar sind.

Zum Antrieb des Sensor-Auslegers, der sich um den Roboter herum bewegt, ist auf der Grundplatte ein bipolarer Schrittmotor angebracht. Dieser bewegt den Ausleger in einem 306$^\circ$ Winkel um den \boidbot herum. So ist gewährleistet, dass möglichst wenig Sensoren benötigt werden, um den Bereich um den Roboter sensorisch abzudecken.

\subsection{Sensoren}

Am bereits erwähnten Sensorturm sind Verschiedene Sensoren zur Abstandsmessung sowie senden und empfangen von Infrarotlicht angebracht. Die Abstandsmessung wird mit einem Infrarot-Proximity-Sensor vorgenommen, der am Ende des Sensor-Auslegers angebracht ist. Zum Senden von Infrarotlicht, sind drei Infrarot-LEDs über der Schrittmotorachse angebracht. Sie dienen zur dazu, den Roboter einem anderen \boidbot identifizierbar zu machen. Um selber einen \boidbot zu identifizieren, besitzt der Roboter einen Infrarotempfänger, der ebenfalls über der Schrittmotorachse in Richtung des Auslegerarms angebracht ist.

\subsection{Hardware-Controller}

Wie bereits erwähnt ist ein \emph{Arduino Uno} Basis der Hardwaresteuerung. Zusätzlich ist daran ein selbstentworfenes Controller-Shield angeschlossen, welches eine Schnittstelle zu den restlichen Komponenten des Systems bildet. Daran sind Stromversorgung, Steppermotor, Sensoren und sie Antriebs-Servo\-motoren angeschlossen. Für die Ansteuerung des Steppermotors befindet sich auf dem Controllerboard eine \emph{L293D H-Driver}\footnote{http://www.datasheetcatalog.org/datasheet/texasinstruments/l293.pdf}. Die Servomotoren werden hauptsächlich durch das Arduino gesteuert, allerdings mussten wir feststellen, dass durch den Umbau es keinen Ruhepunkt gibt, an denen die Motoren still stehen. Dies ist aber notwendig um den Roboter anzuhalten. Durch einen vorgeschalteten Transistor, kann für das Anhalten die Versorgungsspannung für die Servomotoren komplett abgeschaltet werden.


In diesem Abschnitt wird der technische Aufbau des \boidbot (siehe \figref{fig:boidbot}) beschrieben. Grundgerüst des \boidbot bildet eine 100cm$^2$ große Acrylglasplatte, an der alle weiteren Komponenten angebracht sind
Als Controller dient ein \emph{Arduino Uno}\footnote{www.arduino.cc}, dass mit einem selbstentworfenem Controller-Shield zur Steuerung des Antriebs und der Sensorik ausgestattet wurde. Das gesamte System wird durch eine Batterie mit einer Spannung von 9,6V versorgt.

\fig{img/boidbota2r.jpg}{fig:boidbot}{\boidbot}{}

\subsection{Antrieb}

Auf der Unterseite der Grundplatte sind zwei Servomotoren angebracht, die den \boidbot antreiben sowie ein Stützrad. Die hier verbauten Servomotoren haben in ihrer ursprünglichen Bauform nur einen Einstellbereich von $270^\circ$ und somit als Antriebsmotoren nicht nutzbar. Daher wurden diese Motoren entsprechend Modifiziert\footnote{http://www.fpoppa.de/brecker/robotik/tutorials/servo-mod}, damit sie als Antriebsmotoren einsetzbar sind.

Zum Antrieb des Sensor-Auslegers, der sich um den Roboter herum bewegt, ist auf der Grundplatte ein bipolarer Schrittmotor angebracht. Dieser bewegt den Ausleger in einem 306$^\circ$ Winkel um den \boidbot herum. So ist gewährleistet, dass möglichst wenig Sensoren benötigt werden, um den Bereich um den Roboter sensorisch abzudecken.

\subsection{Sensoren}

Am bereits erwähnten Sensorturm sind Verschiedene Sensoren zur Abstandsmessung sowie senden und empfangen von Infrarotlicht angebracht. Die Abstandsmessung wird mit einem Infrarot-Proximity-Sensor vorgenommen, der am Ende des Sensor-Auslegers angebracht ist. Zum Senden von Infrarotlicht, sind drei Infrarot-LEDs über der Schrittmotorachse angebracht. Sie dienen zur dazu, den Roboter einem anderen \boidbot identifizierbar zu machen. Um selber einen \boidbot zu identifizieren, besitzt der Roboter einen Infrarotempfänger, der ebenfalls über der Schrittmotorachse in Richtung des Auslegerarms angebracht ist.

\subsection{Hardware-Controller}

Wie bereits erwähnt ist ein \emph{Arduino Uno} Basis der Hardwaresteuerung. Zusätzlich ist daran ein selbstentworfenes Controller-Shield angeschlossen, welches eine Schnittstelle zu den restlichen Komponenten des Systems bildet. Daran sind Stromversorgung, Steppermotor, Sensoren und sie Antriebs-Servo\-motoren angeschlossen. Für die Ansteuerung des Steppermotors befindet sich auf dem Controllerboard eine \emph{L293D H-Driver}\footnote{http://www.datasheetcatalog.org/datasheet/texasinstruments/l293.pdf}. Die Servomotoren werden hauptsächlich durch das Arduino gesteuert, allerdings mussten wir feststellen, dass durch den Umbau es keinen Ruhepunkt gibt, an denen die Motoren still stehen. Dies ist aber notwendig um den Roboter anzuhalten. Durch einen vorgeschalteten Transistor, kann für das Anhalten die Versorgungsspannung für die Servomotoren komplett abgeschaltet werden. In \figref{fig:schaltung} ist die Verschaltung der einzelnen Komponenten dargestellt.

\fig{img/schaltung.png}{fig:schaltung}{Schaltbild des Hardware-Controllers}{}

\section{Controller}

In diesem Abschnitt wird die entwickelte Software für die Roboter beschrieben. Die Grundplattform ist Arduino, daher wurde zur Erstellung der Software die Arduino Entwicklungsumgebung genutzt. Als Programmiersprache wird ein C-Dialekt verwendet.

\subsection{Verwendete Softwarekomponenten}

Die Arduino Plattform besitzt eine große Gemeinschaft, welche für viele Bauteile spezielle Bibliotheken zur Verfügung stellt. Diese erleichtern das Entwickeln von eigenen Projekten stark.

Es wurden Bibliothken für die Ansteuerung von Servos\footnote{http://www.arduino.cc/playground/ComponentLib/Servo}, einem Stepper-Motor\footnote{http://arduino.cc/en/Reference/Stepper} und zur Steuerung der Infrarot LEDs\footnote{https://github.com/shirriff/Arduino-IRremote} genutzt.

\subsection{Grundverhalten}

Um den Schwenkkopf, an dem der Distanzsensor und der Infrarotempfänger installiert ist, zu steuern wurde ein Schrittmotor genutzt. Dieser kann eine vollständige Umdrehung in 200 Schritten absolvieren. Das bedeutet, das ein Schritt dieses Motors den Schwenkkopf um 1{,}8$^\circ$ dreht.

Im Grundverhalten wird dieser Kopf im Halbkreis um den Roboter bewegt, damit er den kompletten Bereich vor sich abtasten kann. In jedem Schritt wird die aktuell ermittelt Wert des Distanzmessers gelesen und verarbeitet.

Der Distanzsensor hat eine Reichweite von 10cm bis 80cm. Versorgt wird der Sensor über einen 5V Anschluss. Je nach ermittelter Entfernung kann am Sensorausgang eine entsprechende Spannung abgelesen werden. Das Ablesen erfolgt mittels analogem Eingang am Arduino, welches die Eingangsspannung auf einen Wert zwischen 0 und 1024 abbildet.

Damit der jeweilige Roboter vom anderen erkannt werden kann, wird ein Infrarot Signal permanent ausgesendet. Dazu wird die IRremote Bibliothek genutzt, die es erlaubt beliebige Daten über Infrarot zu verschicken. Erkannt werden diese Lichtsignale über einen Infrarotempfänger. Dieser besitzt neben der Stromversorgung auch einen Signalausgang. Wird kein IR Signal empfangen, liegt an diesem 5V an. Wird ein IR Signal erkannt, fällt die Spannung kurzfristig auf 0V. Um diese Veränderung zu erkennen, wurde der Empfänger an einen Interrupt fähigen Pin des Arduinos angeschlossen. Kommt es zum Spannungsabfall an diesem Pin wird eine Funktion der Mikocontrollers aufgerufen. Dieser speichert zur weiteren Verarbeitung den aktuellen Winkel des Schwenkkopfes.

\subsection{Verhaltensbasierter Roboter}

Der Algorithmus basiert auf der Verwendung von verschiedenen Verhalten. Diese sind auf dem Roboter mittels einer Statusmaschine implementiert. Das Standardverhalten eines jeden Roboters ist es, gerade aus zu fahren. Falls ein Hindernis mittels des Schwenkarms entdeckt wurde, wird in den Status Objekt ausweichen gewechselt. Konnte mittels Infrarot Empfänger ein anderer Roboter erkannt werden, wird das Verhalten Roboter folgen genutzt.

\subsection{Algorithmus}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Literaturverzeichnis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\newpage
%\nocite{*}
%\bibliography{books}
%\bibliographystyle{alphadin}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Anhang
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\newpage
%\addcontentsline{toc}{section}{Anhang}

%\begin{appendix}

%\end{appendix}

\end{document}